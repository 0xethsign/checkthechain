#!/usr/bin/env python3

import argparse
import os
import subprocess
import multiprocessing


default_python_versions = [
    'python3.7',
    'python3.8',
    'python3.9',
    'python3.10',
]


build_images_script = os.path.realpath(__file__)
docker_dir = os.path.dirname(build_images_script)
build_image_script = os.path.join(docker_dir, 'build_docker_image')


def build_image(python_version):
    subprocess.call(build_image_script, env={'PYTHON_VERSION': python_version})


def build_all_images(python_versions, parallel=False):
    if not parallel:
        # serial
        for python_version in python_versions:
            build_image(python_version)
    else:
        # parallel
        pool = multiprocessing.Pool(processes=len(python_versions))
        pool.map(build_image, python_versions)


if __name__ == '__main__':
    # parse arguments
    parser = argparse.ArgumentParser()
    parser.add_argument('--parallel', action='store_true')
    args = parser.parse_args()
    parallel = args.parallel

    # build images
    build_all_images(default_python_versions, parallel=parallel)

